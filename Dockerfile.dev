FROM php:7.2-apache

RUN apt-get update -y 


# Evitar preguntas interactivas durante la instalación
ENV DEBIAN_FRONTEND=noninteractive

## Actualiza los paquetes y agrega la clave GPG
RUN apt-get update && apt-get install -y --no-install-recommends gnupg \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0E98404D386FA1D9 6ED0E7B82643E131 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*


# Configurar la zona horaria de Buenos Aires de manera no interactiva
RUN ln -fs /usr/share/zoneinfo/America/Argentina/Buenos_Aires /etc/localtime
RUN apt-get update && apt-get install -y tzdata
RUN dpkg-reconfigure --frontend noninteractive tzdata

#RUN echo "deb http://deb.debian.org/debian/ testing main" >> /etc/apt/sources.list

# Actualiza el sistema e instala wget y otras dependencias necesarias
RUN apt-get install -y software-properties-common wget gnupg2 curl

# Instalar Node.js 16
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get install -y nodejs


RUN apt-get update

# Instala las dependencias necesarias
RUN apt-get install -y \
    libjpeg-dev \
    libzip-dev \
    unzip \
    net-tools \
    mc \
    nano \
    certbot \
    python3-certbot-apache \
    libapache2-mod-fcgid \
    perl libnet-ssleay-perl libio-socket-ssl-perl \
    libauthen-pam-perl ssh && \
    apt-get clean && rm -rf /var/lib/apt/lists/*


# Agregar el repositorio de Webmin
RUN echo "deb https://download.webmin.com/download/repository sarge contrib" > /etc/apt/sources.list.d/webmin.list
RUN wget -qO - http://www.webmin.com/jcameron-key.asc | apt-key add -

# Instalar Webmin
RUN apt-get update && apt-get install -y webmin

# Establece el ServerName global para evitar advertencias  
#RUN echo "ServerName dmit.sytes.net" >> /etc/apache2/apache2.conf
RUN apt-get update && apt-get install -y libzip-dev
RUN apt-get install -y libxml2-dev
RUN apt-get install -y libonig-dev
RUN apt-get install -y libpng-dev
RUN apt-get install -y libjpeg-dev
RUN apt-get install -y libfreetype6-dev
RUN apt-get install -y libwebp-dev
RUN apt-get install -y libxpm-dev
RUN apt-get install -y libicu-dev
RUN apt-get install -y unzip
RUN apt-get install -y git
RUN docker-php-ext-install zip
RUN docker-php-ext-install soap
RUN docker-php-ext-install mbstring
RUN docker-php-ext-install intl
RUN docker-php-ext-install pdo_mysql
RUN docker-php-ext-install opcache
RUN docker-php-ext-install gd

RUN apt-get update 

#RUN apt-get install -y apache2-bin 
#RUN apt-get install -y apache2-data
#RUN apt-get install -y apache2-utils
#RUN apt-get install -y apache2
# ...existing code...


RUN apt-get update 

RUN mkdir -p /etc/apache2/sites-available
RUN mkdir -p /etc/apache2/sites-enabled

COPY ./virtual-hosts-apache/dmit.sytes.conf /etc/apache2/sites-available/dmit.sytes.conf
COPY ./virtual-hosts-apache/dmit.sytes.conf /usr

# Crea el nuevo directorio para el virtual host  
RUN mkdir -p /var/www/dmit.sytes.net

WORKDIR /var/www/dmit.sytes.net

# Copia los archivos de tu aplicación al nuevo directorio  
COPY ./src /var/www/dmit.sytes.net/


# Instala Composer  
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Configura el acceso SSH  
RUN mkdir /var/run/sshd && \
    useradd -m dima && \
    echo 'dima:sanmartin1333' | chpasswd && \
    mkdir -p /home/dima/.ssh && \
    chmod 700 /home/dima/.ssh && \
    chown dima:dima /home/dima/.ssh


# Establecer contraseña de root  
RUN echo 'root:Sanmartin1333' | chpasswd # Establecer contraseña para root
RUN sed -i '/PermitRootLogin/c\PermitRootLogin yes' /etc/ssh/sshd_config

# Habilita SSL y el módulo de reescritura  
# RUN a2enmod ssl && a2enmod rewrite  
# Configuración de Apache para SSL (usando un archivo ficticio inicial)  
#COPY ./virtual-hosts-apache/ /etc/apache2/sites-available/

RUN a2ensite dmit.sytes.conf
#RUN a2ensite piamonddmit.sytes.net.conf
RUN a2enmod rewrite

# Habilitar el sitio

RUN chown -R www-data:www-data /var/www/dmit.sytes.net/public
RUN chmod -R 755 /var/www/dmit.sytes.net/public
# Establecer permisos
RUN chown -R www-data:www-data /var/www/dmit.sytes.net/storage /var/www/dmit.sytes.net/bootstrap/cache
RUN chmod -R 775 /var/www/dmit.sytes.net/storage /var/www/dmit.sytes.net/bootstrap/cache

RUN composer install --no-interaction --optimize-autoloader --no-dev

# Instalar dependencias de npm (Node.js)
RUN npm install

# Ejecutar npm run dev (compilar assets)
RUN npm run dev

# Comando para iniciar Apache
#CMD service webmin start && apache2-foreground
CMD service webmin start && apachectl -D FOREGROUND